#!/bin/bash

PROMSTACK_NAMESPACE="promstack"
PROMSTACK_STACKS=(node-exporter cadvisor prometheus grafana)

function promstack_deploy() {
    if [ ! -d $1 ]; then
        echo "==> Directory $1 does not exist. skipping..."
        return 1
    fi

    echo "==> Deploying $1 stack..."
    cd $1

    docker stack deploy --detach=true -c docker-stack.yml "${PROMSTACK_NAMESPACE}_$1" || {
        echo "==> Failed to deploy $1 stack."
        docker stack rm "${PROMSTACK_NAMESPACE}_$1" > /dev/null
        return 2
    }

    echo "==> Done deploying $1 stack."
    echo ""
    cd - > /dev/null
}

function promstack_remove() {
    if ! docker stack ls | grep "${PROMSTACK_NAMESPACE}_$1" > /dev/null; then
        echo "==> Stack $1 does not exist. skipping..."
        return 1
    fi

    echo "==> Removing $1 stack..."
    docker stack rm --detach=false "${PROMSTACK_NAMESPACE}_$1"
    echo "==> Done Removing $1 stack."
    echo ""
}

# main

echo '                                     __             __  '
echo '    ____  _________  ____ ___  _____/ /_____ ______/ /__'
echo '   / __ \/ ___/ __ \/ __ `__ \/ ___/ __/ __ `/ ___/ //_/'
echo '  / /_/ / /  / /_/ / / / / / (__  ) /_/ /_/ / /__/ ,<   '
echo ' / .___/_/   \____/_/ /_/ /_/____/\__/\__,_/\___/_/|_|  '
echo '/_/                                                     '
echo ''
echo 'A Docker Stack deployment for the Docker Swarm monitoring'
echo 'Includes Grafana, Prometheus, cAdvisor, Node exporter'
echo 'and Blackbox prober exporter.'
echo ''
for stack in ${PROMSTACK_STACKS[@]}; do
    echo "- $stack"
done
echo ''

echo -n "==> Checking Docker..."
if ! command -v docker > /dev/null; then
    echo "Error: docker is not installed."
    exit 1
else
    echo " OK"
fi

echo -n "==> Checking Docker Swarm mode..."
if ! docker node ls > /dev/null 2>&1; then
    echo "Error: Docker is not in Swarm mode."
    exit 1
else
    echo " OK"
fi

echo ""
case $1 in
    deploy)
        for stack in ${PROMSTACK_STACKS[@]}; do
            promstack_deploy $stack
        done
        echo ""
        echo "==> Done deploying all stacks."
        ;;
    remove)
        for stack in ${PROMSTACK_STACKS[@]}; do
            promstack_remove $stack
        done
        echo ""
        echo "==> Done removing all stacks."
        ;;
    *)
        echo "Usage: $0 {deploy|remove}"
        echo "Error: at least one argument is required."
        exit 1
esac
