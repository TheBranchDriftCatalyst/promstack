#!/bin/bash

PROMSTACK_NAMESPACE="promstack"
PROMSTACK_STACKS=(node-exporter cadvisor prometheus blackbox-exporter grafana)

function promstack_stack_deploy() {
    if [ ! -d $1 ]; then
        echo "==> Directory $1 does not exist. skipping..."
        return 1
    fi

    echo "==> Deploying $1 stack..."
    cd $1

    docker stack deploy --detach=true -c docker-stack.yml "${PROMSTACK_NAMESPACE}_$1" || {
        echo "==> Failed to deploy $1 stack."
        docker stack rm "${PROMSTACK_NAMESPACE}_$1" > /dev/null
        return 2
    }

    echo "==> Done deploying $1 stack."
    echo ""
    cd - > /dev/null
}

function promstack_stack_remove() {
    if ! docker stack ls | grep "${PROMSTACK_NAMESPACE}_$1" > /dev/null; then
        echo "==> Stack $1 does not exist. skipping..."
        return 1
    fi

    echo "==> Removing $1 stack..."
    docker stack rm --detach=false "${PROMSTACK_NAMESPACE}_$1"
    echo "==> Done Removing $1 stack."
    echo ""
}

function promstack_purge() {
    echo "==> Purging all stacks..."
    echo ""

    for stack in ${PROMSTACK_STACKS[@]}; do
        promstack_stack_remove $stack
    done
    echo ""

    {
        echo "==> Purging volumes for $PROMSTACK_NAMESPACE..."
        docker volume ls -q -f name="${PROMSTACK_NAMESPACE}" | xargs -r docker volume rm
    }

    echo ""
    echo "==> Done purging all stacks."
}

function promstack_network_create() {
    if ! docker network ls | grep "$1" > /dev/null; then
        echo "==> Creating network $1..."
        docker network create --driver=overlay --scope=swarm --attachable "$1"
        echo "==> Done creating network $1."
        echo ""
    else
        echo "==> Network $1 already exists. skipping..."
    fi
}

function promstack_network_remove() {
    if docker network ls | grep "$1" > /dev/null; then
        echo "==> Removing network $1..."
        docker network rm "$1" || {
            echo "==> Failed to remove network $1."
            return 1
        }
        echo "==> Done removing network $1."
        echo ""
    else
        echo "==> Network $1 does not exist. skipping..."
    fi
}

function promstack_usage() {
    echo "Usage: $0 {deploy|remove|purge}"
    echo "Error: at least one argument is required."
    exit 1
}

function promstack_deploy() {
    echo "==> Starting deployment task..."
    echo ""

    promstack_network_create dockerswarm_ingress
    promstack_network_create prometheus
    promstack_network_create prometheus_gwnetwork

    echo ""
    echo "==> Waiting for 15s before creating networks..."; sleep 30
    echo ""

    for stack in ${PROMSTACK_STACKS[@]}; do
        promstack_stack_deploy $stack
    done

    echo "-----------------------------------------------------------------"
    echo "The following services are now available:"
    echo "  - Grafana: http://localhost:3000"
    echo "  - Prometheus: http://localhost:9090"
    echo ""
    echo "The default username and password for Grafana is grafana/grafana."
    echo "-----------------------------------------------------------------"
    echo ""
    echo "==> Done deploying all stacks."
}

function promstack_remove() {
    echo "==> Starting removal task..."
    echo ""

    for stack in ${PROMSTACK_STACKS[@]}; do
        promstack_stack_remove $stack
    done

    echo ""
    local __sleep=60
    echo "==> Waiting for ${__sleep}s before removing networks..."; sleep $__sleep
    echo ""
    promstack_network_remove prometheus_gwnetwork
    promstack_network_remove prometheus
    promstack_network_remove dockerswarm_ingress
    
    echo "-----------------------------------------------"
    echo "You can monitor the removal process by running:"
    echo "  watch docker service ls"
    echo "-----------------------------------------------"
    echo ""
    echo "==> Done removing all stacks."
}

# main

echo '                                     __             __  '
echo '    ____  _________  ____ ___  _____/ /_____ ______/ /__'
echo '   / __ \/ ___/ __ \/ __ `__ \/ ___/ __/ __ `/ ___/ //_/'
echo '  / /_/ / /  / /_/ / / / / / (__  ) /_/ /_/ / /__/ ,<   '
echo ' / .___/_/   \____/_/ /_/ /_/____/\__/\__,_/\___/_/|_|  '
echo '/_/                                                     '
echo ''
echo 'A Docker Stack deployment for the Docker Swarm monitoring'
echo 'Includes Grafana, Prometheus, cAdvisor, Node exporter'
echo 'and Blackbox prober exporter.'
echo ''

echo -n "Checking Docker..."
if ! command -v docker > /dev/null; then
    echo "Error: docker is not installed."
    exit 1
else
    echo " OK"
fi

echo -n "Checking Docker Swarm mode..."
if ! docker node ls > /dev/null 2>&1; then
    echo "Error: Docker is not in Swarm mode."
    exit 1
else
    echo " OK"
fi

echo ""
case $1 in
    deploy) promstack_deploy ;;
    remove) promstack_remove ;;
    purge) promstack_purge ;;
    *) promstack_usage
esac
