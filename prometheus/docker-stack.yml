# yaml-language-server: $schema=https://raw.githubusercontent.com/swarmlibs/dockerstack-schema/main/schema/dockerstack-spec.json

x-deploy: &x-deploy
  mode: global
  placement:
    max_replicas_per_node: 1
    constraints:
      - node.role == manager
      - node.labels.io.promstack.prometheus == true

x-exporter-resources-constraints: &x-exporter-resources-constraints
  limits:
    memory: 128M
  reservations:
    memory: 64M

x-default-logging: &x-default-logging
  options:
    max-size: "12m"
    max-file: "5"
  driver: json-file

services:

  # ====================================================
  # Prometheus
  # https://github.com/prometheus/prometheus
  # ====================================================

  prometheus:
    image: swarmlibs/prometheus:main
    deploy:
      <<: *x-deploy
      labels:
        io.prometheus.role: "prometheus"
        io.prometheus.dockerswarm-tasks.should_be_scraped: "false"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
    logging: *x-default-logging
    environment:
      - DOCKERSWARM_SERVICE_ID={{.Service.ID}}
      - DOCKERSWARM_SERVICE_NAME={{.Service.Name}}
      - DOCKERSWARM_NODE_ID={{.Node.ID}}
      - DOCKERSWARM_NODE_HOSTNAME={{.Node.Hostname}}
      - DOCKERSWARM_TASK_ID={{.Task.ID}}
      - DOCKERSWARM_TASK_NAME={{.Task.Name}}
      - DOCKERSWARM_TASK_SLOT={{.Task.Slot}}
      - DOCKERSWARM_STACK_NAMESPACE={{ index .Service.Labels "com.docker.stack.namespace"}}
    # ports:
    #   - published: 9090
    #     target: 9090
    #     mode: host
    hostname: replica-{{.Task.Slot}}.prometheus.local
    networks:
      public:
        aliases:
          - prometheus.svc.cluster.local
      prometheus:
        aliases:
          - prometheus.local
      prometheus_gwnetwork:
        aliases:
          - prometheus.local
      prometheus_internal:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: volume
        source: prometheus-data
        target: /prometheus/data
      - type: volume
        source: prometheus-configs
        target: /prometheus-configs.d
    depends_on:
      - prometheus-config-reloader
      - prometheus-config-provider

  prometheus-config-provider:
    image: swarmlibs/prometheus-config-provider:main
    command:
      - --output-dir=/prometheus-configs.d
    deploy:
      <<: *x-deploy
      resources: *x-exporter-resources-constraints
      labels:
        io.prometheus.role: "prometheus-config-provider"
    logging: *x-default-logging
    configs:
      - prometheus-dockerswarm-nodes
      - prometheus-dockerswarm-services-endpoints-host
      - prometheus-dockerswarm-services-endpoints-ingress
      - prometheus-dockerswarm-tasks
    volumes:
      - type: volume
        source: prometheus-configs
        target: /prometheus-configs.d
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true

  prometheus-config-reloader:
    image: quay.io/prometheus-operator/prometheus-config-reloader:v0.74.0
    command:
      - --listen-address=:8080
      - --watched-dir=/prometheus-configs.d
      - --reload-url=http://prometheus:9090/-/reload
      - --runtimeinfo-url=http://prometheus:9090/api/v1/status/runtimeinfo
      - --watch-interval=15s
      - --reload-timeout=10s
    deploy:
      <<: *x-deploy
      resources: *x-exporter-resources-constraints
      labels:
        io.prometheus.role: "prometheus-config-reloader"
        io.prometheus.enabled: "true"
        io.prometheus.job_name: "prometheus-config-reloader"
        io.prometheus.scrape_port: "8080"
        io.prometheus.dockerswarm-services.should_be_probed: "false"
    logging: *x-default-logging
    networks:
      prometheus_internal:
    volumes:
      - type: volume
        source: prometheus-configs
        target: /prometheus-configs.d

volumes:
  prometheus-data:
  prometheus-configs:

networks:
  public: # The 3rd-party ingress network
    name: public
    external: true
  prometheus:
    name: prometheus
    external: true
  prometheus_gwnetwork:
    name: prometheus_gwnetwork
    external: true
  prometheus_internal:
    internal: true

configs:
  prometheus-dockerswarm-nodes:
    name: prometheus-dockerswarm-nodes-v1
    file: ./scrape-configs/dockerswarm-nodes.yaml
    labels:
      - "io.prometheus.scrape_config=true"
  prometheus-dockerswarm-services-endpoints-host:
    name: prometheus-dockerswarm-services-endpoints-host-v1
    file: ./scrape-configs/dockerswarm-services-endpoints-host.yaml
    labels:
      - "io.prometheus.scrape_config=true"
  prometheus-dockerswarm-services-endpoints-ingress:
    name: prometheus-dockerswarm-services-endpoints-ingress-v1
    file: ./scrape-configs/dockerswarm-services-endpoints-ingress.yaml
    labels:
      - "io.prometheus.scrape_config=true"
  prometheus-dockerswarm-tasks:
    name: prometheus-dockerswarm-tasks-v1
    file: ./scrape-configs/dockerswarm-tasks.yaml
    labels:
      - "io.prometheus.scrape_config=true"
