version: '3'

includes:
  utils: ../../common/Taskfile.utils.yml

vars:
  DOCKER_STACK_CONFIG: docker stack config
  DOCKER_STACK_CONFIG_ARGS: --skip-interpolation
  STACK_NAME: 'promstack'

tasks:
  default:
    silent: true
    cmds:
    - 'echo {{shellQuote .TEST}}'
    # - "echo   deploy: Deploy the stack"
    # - "echo   remove: Remove the stack"
    # - "echo   clean: Clean up temporary files"

  create-manifest:
    cmds:
    - mkdir -p _tmp
    - "{{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} -c blackbox-exporter/docker-stack.yml > _tmp/blackbox-exporter.manifest.yml"
    - "{{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} -c cadvisor/docker-stack.{{ OS }}.yml > _tmp/cadvisor.manifest.yml"
    - "{{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} -c grafana/docker-stack.yml > _tmp/grafana.manifest.yml"
    - "{{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} -c node-exporter/docker-stack.yml > _tmp/node-exporter.manifest.yml"
    - "{{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} -c prometheus/docker-stack.yml > _tmp/prometheus.manifest.yml"
    - "{{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} -c pushgateway/docker-stack.yml > _tmp/pushgateway.manifest.yml"

  create-deployment:
  - |
    {{.DOCKER_STACK_CONFIG}} {{.DOCKER_STACK_CONFIG_ARGS}} \
    -c _tmp/blackbox-exporter.manifest.yml \
    -c _tmp/cadvisor.manifest.yml \
    -c _tmp/grafana.manifest.yml \
    -c _tmp/node-exporter.manifest.yml \
    -c _tmp/prometheus.manifest.yml \
    -c _tmp/pushgateway.manifest.yml \
    > deployment.stack.yml
  - "sed 's|$(PWD)/||g' deployment.stack.yml > deployment.stack.yml.tmp"
  - rm deployment.stack.yml
  - mv deployment.stack.yml.tmp deployment.stack.yml

  create-networks:
    cmds:
    - docker network create --scope=swarm --driver=overlay --attachable public || true
    - docker network create --scope=swarm --driver=overlay --attachable prometheus || true
    - docker network create --scope=swarm --driver=overlay --attachable prometheus_gwnetwork || true

  deploy:
    cmds:
    - task: create-manifest
    - task: create-deployment
    - task: create-networks
    - "docker stack deploy --with-registry-auth -c deployment.stack.yml {{.STACK_NAME}}"


  # stack-remove:
  #   cmds:
  #   - docker stack rm promstack

# config-prune:
#   cmds:
#   - docker config ls -q | xargs docker config rm

# volume-prune:
#   cmds:
#   - docker volume ls -q | xargs docker volume rm
